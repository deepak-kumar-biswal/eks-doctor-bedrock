# Pre-commit hooks configuration
# Run: pre-commit install to enable these hooks

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--allow-multiple-documents']
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: mixed-line-ending
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: detect-private-key
      - id: check-added-large-files
        args: ['--maxkb=1000']

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3
        args: ['--line-length=100']

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=100']

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=100', '--ignore=E203,W503']

  # Python security scanning
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-ll', '--skip=B101']
        files: \.py$

  # Terraform formatting
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.81.0
    hooks:
      - id: terraform_fmt
      - id: terraform_validate
        args: ['--hook-config=--retry-once-with-cleanup=true']
      - id: terraform_docs
        args: ['--hook-config=--path-to-file=README.md', '--hook-config=--add-to-existing-file=true']
      - id: terraform_tflint
        args: ['--args=--only=terraform_deprecated_interpolation', '--args=--only=terraform_deprecated_index', '--args=--only=terraform_unused_declarations', '--args=--only=terraform_comment_syntax', '--args=--only=terraform_documented_outputs', '--args=--only=terraform_documented_variables', '--args=--only=terraform_typed_variables', '--args=--only=terraform_module_pinned_source', '--args=--only=terraform_naming_convention', '--args=--only=terraform_required_version', '--args=--only=terraform_required_providers', '--args=--only=terraform_standard_module_structure', '--args=--only=terraform_workspace_remote']

  # YAML formatting
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.32.0
    hooks:
      - id: yamllint
        args: ['-d', 'relaxed']

  # Markdown formatting and linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.35.0
    hooks:
      - id: markdownlint
        args: ['--fix']

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.5
    hooks:
      - id: shellcheck
        args: ['-e', 'SC1091']

  # Docker linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # Additional Python checks
  - repo: local
    hooks:
      - id: pylint
        name: pylint
        entry: pylint
        language: python
        types: [python]
        args: ['--disable=C0114,C0115,C0116', '--max-line-length=100']
        additional_dependencies: [pylint]

      - id: mypy
        name: mypy
        entry: mypy
        language: python
        types: [python]
        args: ['--ignore-missing-imports']
        additional_dependencies: [mypy, types-requests, types-PyYAML]

      - id: safety
        name: safety
        entry: safety
        language: python
        args: ['check', '--json']
        files: requirements.*\.txt$
        additional_dependencies: [safety]

# Global configuration
default_install_hook_types: [pre-commit, pre-push]
default_stages: [commit, push]

ci:
  autofix_commit_msg: üé® [pre-commit.ci] auto fixes from pre-commit.com hooks
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: ‚¨ÜÔ∏è [pre-commit.ci] pre-commit autoupdate
  autoupdate_schedule: weekly
  skip: [pylint, mypy]  # Skip heavy checks in CI
  submodules: false
